#include <iostream>
using namespace std;
class heap{
  public:
  int * arr;
  int capacity;
  int size ;

  heap(int capacity){
    this->arr = new int[capacity];
    this->capacity = capacity;
    this->size = 0;
  }

  void insert(int element){
    if(size==capacity){
      cout<<"heap overflow"<<endl;
      return;

    }
    size++;
    int index = size;
    arr[index] = element;
    while(index > 1){
      int paraentIndex = index/2;
      if(arr[index] > arr[paraentIndex]){
        swap(arr[index],arr[paraentIndex]);
        index = paraentIndex;
      }
      else{
        break;
      }
    }

  }
void print(){
  cout<<"printing heap :"<<endl;
  for(int i=1;i<=size;i++){
    cout<<arr[i]<<" ";
  }
}
 int deletion(){
   int answer = arr[1];

   //assign first element to its last elemnt of the heap
   arr[1] = arr[size];
   //now delete that perticular element 
   size--;

   int index = 1;
   while(index < size){
     int leftindex = 2 * index;
     int rightindex =2 * index + 1;

     int largestIndex = index;
     if(leftindex <= size && arr[largestIndex] < arr[leftindex]){
       largestIndex = leftindex;
     }
     if(rightindex <= size && arr[largestIndex] < arr[rightindex]){
       largestIndex = rightindex;
     }

     if(index == largestIndex){
       break;
     }
     else{
       swap(arr[index] , arr[largestIndex]);
       index = largestIndex;
     }
   }
   return answer;

   
 }
//  void heapify(int * arr , int n , int index){
//   int leftIndex = 2 * index;
//   int rightIndex = 2 * index + 1;
//   int largestIndex = index;

//   if(arr[leftIndex] > arr[largestIndex] && leftIndex <= n){
//     largestIndex = leftIndex;

//   }
//   if(arr[rightIndex] > arr[largestIndex] && rightIndex <=n){
//     largestIndex = rightIndex;
//   }
//   if(index != largestIndex){
//     swap(largestIndex,index);
//     index = largestIndex;
//     heapify(arr,n,index);
//   }
//  }
};
int main() {
  heap h1(20);
  h1.insert(10);
  h1.insert(20);
  h1.insert(5);
  h1.insert(11);
  h1.insert(6);
  h1.print();

  int ans = h1.deletion();
  cout<<endl;
  cout<<"deleted element : "<<ans<<endl;
  h1.print();

}
