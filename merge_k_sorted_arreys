#include <iostream>
#include<queue>
using namespace std;
class Info{
  public:
  int data;
  int rowIndex;
  int colIndex;

  Info(int a , int b , int c){
    this->data = a;
    this->rowIndex = b;
    this->colIndex = c;
  } 
};
class compare{
  public:
  bool operator()(Info *a , Info * b){
    return a->data > b->data;
  }
};
void mergeKsortedarrey(int arr[][4] , int n , int k , vector<int>&ans){
    priority_queue<Info* , vector<Info*>,compare>pq;

    for(int row = 0;row<k;row++){
      int element = arr[row][0];
      Info * temp = new Info(element , row ,0);
      pq.push(temp);
    }

    while(!pq.empty()){
      Info * temp = pq.top();
      pq.pop();
      int topdata = temp->data;
      int toprow = temp->rowIndex;
      int topcol = temp->colIndex;

      ans.push_back(topdata);

      //next element from the same row beacause abhi jo nikala hai us row me se new element fetch bhi karan padega na 

      if(topcol + 1 < n){
        Info * newInfo = new Info(arr[toprow][topcol+1] , toprow , topcol+1);
        pq.push(newInfo);
      }

    }
} 
int main() {
 int arr[3][4] = {
     {1,4,8,11},
     {2,3,6,10},
     {5,7,12,13}
 };
 int n = 4;
 int k = 3;

 vector<int>ans;
 mergeKsortedarrey(arr,n,k,ans);
 for(int i=0;i<ans.size();i++){
  cout<<ans[i]<<" ";
 }cout<<endl;
}
